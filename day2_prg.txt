1.pascal triangle

#include<stdio.h>
int main()
{
int n,s,c,count=0;
printf("enter no.of rows:");
scanf("%d",&n);
for(int i=0;i<n;i++){
    count++;
for(s=0;s<n-i-1;s++){
    count++;
printf("  ");
count++;
}
count++;
for(int j=0;j<i+1;j++){
    count++;
if(j==0){
c=1;
count++;
}
else{
c=c*(i-j+1)/j;
count++;
}
printf("%d   ",c);
count++;
}count++;
printf("\n");
}
printf("\n");
printf("the time complexity is:%d",count);
}

output:

enter the no.of rows:5
        1
      1   1
    1   2   1
  1   3   3   1
1   4   6   4   1
81

2.binary search

#include<stdio.h>
int count=0;
int bs(int arr[],int size,int key){
    int ll=0,ul=size-1,mid,pos=-1;
    while (ll<=ul)
    {
    	count++;
	mid=(ll+ul)/2;
	    count++;
        if(arr[mid]==key){
        	count++;
            pos=mid;
            count++;
            break;
            count++;
        }
        else if(arr[mid]>key){
        	count++;
          ul=mid-1;
          count++;
      }
        else if(arr[mid]<key){
        	count++;
          ll=mid+1;
          count++;
      }
    }count++;
    return pos;
    count++;
    
}

int main(){
    int key,size;
    printf("Enter the no. of elements want to enter: ");
    scanf("%d",&size);

    int arr[size];

    printf("Enter the elements: \n");
    for(int i=0;i<size;i++)
     scanf("%d",&arr[i]);

    printf("Enter the element to be found: ");
    scanf("%d",&key);

    int res=bs(arr,size,key);
    count++;

    if(res>0)
      printf("%d found in position %d",key,res);
    else if(res<0)
      printf("Element not found...");
      
      printf("\n");
      printf("time complexity:%d",count);
}

output:

Enter the no. of elements want to enter: 5
Enter the elements:
12
45
67
34
56
Enter the element to be found: 67
67 found in position 2
time complexity:6


3.armstrong number

#include<stdio.h>
int main()
{
	int num,rem,sum,temp,count=0;
	printf("enter the number: ");
	scanf("%d",&num);
	temp=num;
	while(num>0)
	{
		count++;
		rem=num%10;
		count++;
		sum=sum+rem*rem*rem;
		count++;
		num=num/10;
		count++;
	}count++;
	if(temp==sum){
		count++;
		printf("%d is an armstrong number",temp);
	}
	else
	{
		count++;
		printf("%d is not an armstrong number",temp);
	}
	printf("\n");
	printf("%d",count);
}

output:

enter the number: 371
371 is an armstrong number
14

4.strassen multiplication

#include<stdio.h>
int main()
{
	int a[2][2], b[2][2], c[2][2], i, j;
	int m1, m2, m3, m4 , m5, m6, m7;
	int count=0;
	printf("Enter the 4 elements of first matrix: ");
	  for(i = 0;i < 2; i++)
	  {
	  	count++;
	  	for(j = 0;j < 2; j++){
	  		   count++;
	           scanf("%d", &a[i][j]);
	       }
      }
      count++;
      count++;
	 
	printf("Enter the 4 elements of second matrix: ");
	  for(i = 0; i < 2; i++){
	  	  count++;
	      for(j = 0;j < 2; j++){
	      	   count++;
	           scanf("%d", &b[i][j]);
	       }
	   }
	   count++;
	 
	  printf("\nThe first matrix is\n");
  for(i = 0; i < 2; i++){
  	      count++;
	      printf("\n");
	      for(j = 0; j < 2; j++){
	      	   count++;
	           printf("%d\t", a[i][j]);
	    }
	  }
	  count++;
	  count++;
	 
    printf("\nThe second matrix is\n");
	  for(i = 0;i < 2; i++){
	  	  count++;
	      printf("\n");
	      for(j = 0;j < 2; j++){
	       count++;
           printf("%d\t", b[i][j]);
       }
  }
  count++;
  count++;
  m1= (a[0][0] + a[1][1]) * (b[0][0] + b[1][1]);
  m2= (a[1][0] + a[1][1]) * b[0][0];
  m3= a[0][0] * (b[0][1] - b[1][1]);
  m4= a[1][1] * (b[1][0] - b[0][0]);
  m5= (a[0][0] + a[0][1]) * b[1][1];
  m6= (a[1][0] - a[0][0]) * (b[0][0]+b[0][1]);
	  m7= (a[0][1] - a[1][1]) * (b[1][0]+b[1][1]);
	 
  c[0][0] = m1 + m4- m5 + m7;
	  c[0][1] = m3 + m5;
	  c[1][0] = m2 + m4;
	  c[1][1] = m1 - m2 + m3 + m6;
	 
	   printf("\nAfter multiplication using Strassen's algorithm \n");
	   for(i = 0; i < 2 ; i++){
	   	  count++;
	      printf("\n");
      for(j = 0;j < 2; j++){
      	       count++;
	           printf("%d\t", c[i][j]);
	       }
   }
   count++;
   count++;
   printf("%d",count);
	}

output:
Enter the 4 elements of first matrix: 1 2 3 4
Enter the 4 elements of second matrix: 5 6 7 8

The first matrix is

1       2
3       4
The second matrix is

5       6
7       8
After multiplication using Strassen's algorithm

19      22
43      50      
time complexity:39

5.GCD of two numbers

#include <stdio.h>
int main()
{
    int n1, n2, i, gcd;
    int count=0;

    printf("Enter two integers: ");
    scanf("%d %d", &n1, &n2);

    for(i=1; i <= n1 && i <= n2; ++i)
    {
    	count++;
        if(n1%i==0 && n2%i==0)
        count++;
            gcd = i;
    }

    printf("G.C.D of %d and %d is %d", n1, n2, gcd);
    count++;
    printf("\n");
    printf("%d ",count); 
}

output:

Enter two integers: 35 55
G.C.D of 35 and 55 is 35
38

7.linear search

#include<stdio.h>
int main(){
	int arr[20],count=0;
	printf("enter the elements to be added:");
	for(int i=0;i<10;i++){
		count++;
        scanf("%d",&arr[i]);
	}count++;
	int search,flag=0;
	printf("enter the search element:");
	scanf("%d",&search);
	for(int j=0;j<10;j++){
		count++;
		if(search==arr[j]){
			count++;
			flag=1;
		}
	}count++;
	if(flag==1){
		count++;
		printf("element found");
	}
	else{
		count++;
		printf("element not found");
	}
	printf("%d",count);
}

output:
enter the elements to be added:10
20
30
40
50
60
70
80
90
100
enter the search element:80
element found
time complexity:24

8.largest element value:

#include<stdio.h>
int grtst(int arr[],int si){
    int max=0,count=0,cmp=0;
    for (int  i = 0; i < si; i++){
        count++;
        cmp++;
        if(max<arr[i]){
            count++;
           max=arr[i];
           count++;
        }
    }count++;

    printf("greatest element in array: %d\n",max);
    printf("count: %d\n",count);
    printf("comparision: %d\n",cmp);
    return 0;
}

void main(){
    int size;
    printf("Enter tot element: ");
    scanf("%d",&size);

    int arr[size];

    printf("Enter the elements: ");
    for (int i = 0; i < size; i++)
        scanf("%d",&arr[i]);

    grtst(arr,size);
    
}

9.factorial

#include<stdio.h>

int facto(int val){
    int count=0,fact=1;
    if(val>0){
        count++;
        count++;
        fact*=facto(val-1)*val;
    }
    else{
     count++;
     printf("count: %d\n",count);
     return fact;
    }

}

void main(){
    int num;
    printf("Enter the value: ");
    scanf("%d",&num);
    int res=facto(num);
    printf("factorial: %d",res);
}

10.fibonacci series:

#include<stdio.h>

int fab(int n){
    int n1=0,n2=1,n3,c=0,sum=0,ini=0;
    int count=0;
    printf("%d %d ",n1,n2);
    while(c<n){
        count++;
        n3=n1+n2;
        count++;
        printf("%d ",n3);
        if(ini%2==0){
            count++;
            sum+=n3;
            count++;
            c++;
            count++;
        }
        ini++;
        count++;
        n1=n2;
        count++;
        n2=n3;
        count++;
    }count++;
    printf("\nsum: %d\n",sum);
    printf("count: %d",count);
    return 0;
}

void main(){
int n;
printf("Enter the n value: ");
scanf("%d",&n);

fab(n);
}

11.perfect numbers

#include<stdio.h>

void main(){
    float N;
    int sum=0,c=0,count=0,val=4;
    printf("Enter the n value: ");
    scanf("%f",&N);

    if(N>=1){
     count++;
    int n=(int) N;
     count++;
    while(c<n){
        count++;
     for(int i=1;i<val;i++){
        count++;
        if(val%i==0){
         count++;
         sum+=i;
         count++;
        }
     }count++;
     if(sum==val){
         count++;
         printf("%d ",sum);
         c++;
         count++;
     }
     
     sum=0;
     count++;
     val++;
     count++;
     }count++;
    }
    else{
        count++;
        printf("Invalid input...!");
    }
    printf("\ncount: %d",count);
}

12.palindrome

#include<stdio.h>
#include<string.h>
int main()
{
	char val[25],cnt=0;
	printf("enter the value:");
	scanf("%s",&val);
	int count=0;
	while(val[count]!='\0'){
		cnt++;
		count++;
		cnt++;
	}
	cnt++;
	
	int new_count=0;
	for(int i=0,j=count-1;i<count,j>=0;i++,j--){
		cnt++;
	if(val[i]==val[j]){
		cnt++;
		new_count++;
	}
	}cnt++;
	if(new_count==count){
	printf("palindrome...");
	cnt++;
    }
	else{
	printf("not palindrome...");
	cnt++;
    }
    printf("%d",cnt);
}

output:

enter the value:madam
palindrome...23

13.selection sort

#include<stdio.h>

int sel_sort(int arr[],int si){
    int count=0;
    for (int i = 0; i < si; i++)
    {
        count++;
        for (int j = i+1; j < si; j++)
        {
            count++;
            if(arr[j]<arr[i]){
                count++;
                int temp=arr[j];
                count++;
                arr[j]=arr[i];
                count++;
                arr[i]=temp;
                count++;
            }
        }count++;
    }count++;

    printf("Sorted array: ");
    for (int i = 0; i < si; i++)
    {
        count++;
        printf("%d ",arr[i]);
    }
    printf("count: %d",count);
    return 0;
}

void main(){
    int size;
    printf("Enter tot element: ");
    scanf("%d",&size);

    int arr[size];

    printf("Enter the elements: ");
    for(int i=0;i<size;i++)
     scanf("%d",&arr[i]);

     sel_sort(arr,size);
}

14.number pattern

#include<stdio.h>
int main(){
    int n,s,count=0;
    printf("enter no.of rows:");
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        count++;
        for(int j=n;j>i;j--){
            count++;
            printf(" ");
            count++;
        }count++;
        for(int j=1;j<=i;j++){
            count++;
            printf("%d ",j);
            count++;
        }count++;
        printf("\n");
        count++;
    }count++;
    printf("time complexity:%d",count);
    return 0;
}

output:
enter no.of rows:4
   1
  1 2
 1 2 3
1 2 3 4
time complexity:49

16.substring

#include<stdio.h>

void substr(char str[],char sub[],int strs,int subs){
    int pos=0,flag=0;
    if(strs<subs){
        printf("String not found..!");
    }

    if(subs<strs){
        for (int i = 0; i < strs; i++)
        {

            if(str[i]==sub[0]){
                pos=i;
                break;
            }

        }

        for (int i = pos,j=0; i < (pos+(strs-subs)); i++,j++)
        {
            if(str[i]!=sub[j]){
                flag=1;
                break;
            }
        }
        
        if(flag==0){
            printf("sub string found...!");
        }

        else{
            printf("sub string not found...!");
        }
         
    }
    
}

void main(){
    int strs=0,subs=0;
    char str[50],sub[50];
    printf("Enter the string: ");
    scanf("%s",&str);

    printf("Enter the sub_string: ");
    scanf("%s",&sub);

    while(str[strs]!='\0')
     strs++;
    
    while(sub[subs]!='\0')
     subs++;

    substr(str,sub,strs,subs);
    
}

18.reverse string

#include<stdio.h>

void main(){
    char val[25];

    printf("enter the value: ");
    scanf("%s",&val);

    int count=0,c=0;
    
    while (val[count]!='\0'){
        count++;
        c++;
    }c++;
     
    
    for(int i=count-1;i>=0;i--){
        c++;
        printf("%c",val[i]);
    }c++;
    printf("\ncount: %d",c);
}

output:
enter the value:123
321
14

19.bubble sort

#include<stdio.h>

void main(){
    int ele,count=0;

    printf("Enter tot element: ");
    scanf("%d",&ele);

    int arr[ele];
    printf("Enter the elements: ");

    for (int i = 0; i < ele; i++){
        count++;
        scanf("%d",&arr[i]);
    }count++;
        

    for (int i = 0; i < ele; i++)
    {count++;
        for (int j =i+1; j < ele; j++)
        {count++;
         if (arr[i]>arr[j])
         {
            count++;
            int temp=arr[i];
            count++;
            arr[i]=arr[j];
            count++;
            arr[j]=temp;
            count++;
         }
        }count++;

    }count++;
    
    printf("sorted array: ");
    for (int i = 0; i < ele; i++)
    {count++;
        count++;
        printf("%d  ",arr[i]);
    }count++;
    printf("count: %d",count);
}

output:

Enter tot element: 5
Enter the elements: 12 34 56 78 45
sorted array: 12  34  45  56  78  count:46
